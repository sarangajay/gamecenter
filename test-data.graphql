# APIs to enroll gamers and their interest
    #Which takes the general details (name, gender, nickname, geography(europe,asia,usa))
    #Lookup up Any 5 games(fortnite, call of duty, dota, valhalla, amongus,â€¦).
    #Gamers individual interests with their levels (noob, pro, invincible)
mutation {
    enrollGamer(
        input: {name: "John Doe",
            gender: "Male",
            nickname: "JD",
            geography: "Earth",
            games: [{name: "Fortnite", level: "NOOB"},
                {name: "Call of duty", level: "PRO"},
                {name: "Dota", level: "INVINCIBLE"},
                {name: "Valhalla", level: "INVINCIBLE"},
                {name: "Amongus", level: "NOOB"}
            ]
        }
    ) {
        gamerId
        name
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}


mutation {
    enrollGamer(
        input: {name: "Saranga",
            gender: "Male",
            nickname: "JD",
            geography: "Earth",
            games: [{name: "Fortnite", level: "NOOB"},
                {name: "Call of duty", level: "PRO"},
                {name: "Dota", level: "INVINCIBLE"},
                {name: "Valhalla", level: "INVINCIBLE"},
                {name: "Amongus", level: "NOOB"}
            ]
        }
    ) {
        gamerId
        name
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}

#API to give credits to individual users
# credit is added to the each game per user

mutation {
    grantCreditToGamer(gamerId: 1, gameId:1,creditAmount: 100) {
        gamerId
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}

mutation {
    grantCreditToGamer(gamerId: 1, gameId:2,creditAmount: 200) {
        gamerId
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}

mutation {
    grantCreditToGamer(gamerId: 1, gameId:3,creditAmount: 300) {
        gamerId
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}

mutation {
    grantCreditToGamer(gamerId: 1, gameId:4,creditAmount: 400) {
        gamerId
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}

mutation {
    grantCreditToGamer(gamerId: 1, gameId:5,creditAmount: 500) {
        gamerId
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}


mutation {
    grantCreditToGamer(gamerId: 2, gameId:1,creditAmount: 50) {
        gamerId
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}

mutation {
    grantCreditToGamer(gamerId: 2, gameId:2,creditAmount: 300) {
        gamerId
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}

mutation {
    grantCreditToGamer(gamerId: 2, gameId:3,creditAmount: 500) {
        gamerId
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}

mutation {
    grantCreditToGamer(gamerId: 2, gameId:4,creditAmount: 200) {
        gamerId
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}


mutation {
    grantCreditToGamer(gamerId: 2, gameId:5,creditAmount: 700) {
        gamerId
        gender
        nickname
        geography
        games {
            gameId
            name
            level
            credits
        }
    }
}

#API to get the gamer with maximum credits for each game based on their levels
query {
    findGamersWithMaxCreditsForEachGameBaseOnLevel {
        gamerId
        gamerName
        gameId
        gameName
        level
        credits
    }
}

#Search API based on gamers levels, games and geography for auto-matching

query {
    gameDataSearch(gameName: "Dota") {
        gamerName
        gender
        nickname
        geography
        gameName
        level
    }
}

query {
    gameDataSearch( gamerName: "John Doe" level: "INVINCIBLE") {
        gamerName
        gender
        nickname
        geography
        gameName
        level
    }
}